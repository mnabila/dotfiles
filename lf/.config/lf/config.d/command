#!/bin/sh

# file opener
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*) nvim "$f" ;;
        image/*) lf -remote "send $id multifile feh";;
        application/x-iso9660-image) udisksctl loop-setup --file "$f";;
        application/x-executable) lf -remote "send $id echo 'not allowed'";;
        video/*) lf -remote "send $id multifile mpv";;
        *) xdg-open "$f" &>/dev/null & ;;
    esac
}}

# multiple file handler
cmd multifile &{{
	eval "$1 $(echo -e "$fx" | xargs -i echo "\\'{}\\'" | xargs echo)"
}}

# create directory
cmd mkdir ${{
    printf "Directory Name: "
    read name
    if [ ! -z "$name" ]; then
        mkdir "$name"
    fi
}}

# create file
cmd touch ${{
    printf "File Name: "
    read name
    if [ ! -z "$name" ]; then
        $EDITOR "$name"
    fi
}}

# rename selected file/folder
# dependencies
# - https://archlinux.org/packages/extra/x86_64/renameutils/
cmd bulkrename ${{
	eval "qmv -f do $(echo -e "$fx" | xargs -i echo "\\'{}\\'" | xargs echo)"
}}

# fuzzy finder
cmd fzf_select ${{
    res="$(find -L . \( -path '*/\.*' -o -fstype 'dev' -o -fstype 'proc' \) -prune -o -print 2> /dev/null | sed 1d | cut -b3- | fzf +m)"
    if [ -d "$res" ]; then
        cmd="cd"
    else 
        cmd="select"
    fi
    lf -remote "send $id $cmd \"$res\""
}}

# print mimetype
cmd mimetype &{{
    mim=$(file --mime-type -bL "$f")
    lf -remote "send $id echomsg 'mimetype : $mim'" &
}}

# extract current file or selected files
cmd extract ${{
    set -f
    case "$f" in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf "$f";;
        *.tar.gz|*.tgz) tar xzvf "$f";;
        *.tar.xz|*.txz) tar xJvf "$f";;
        *.zip) unzip "$f";;
        *.rar) unrar x "$f";;
        *.7z) 7z x "$f";;
    esac
}}
