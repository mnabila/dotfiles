#!/bin/sh
# vim: ft=sh

alias sysinfo="neofetch --ascii ~/.config/neofetch/chess.txt"
alias {vi,vim}="nvim --noplugin -u /dev/null"
alias aur-pkg="ssh aur@aur.archlinux.org list-repos"
alias aria2d="aria2c --enable-rpc"
alias ssh="env TERM=xterm-256color ssh"
alias nu="paru --sudoloop -S --noconfirm neovim-git && nvim +PackerSync"
alias docui="env LC_CTYPE=en_US.UTF-8 TERM=xterm-256color docui"
alias cekisp="curl ipinfo.io"
alias td="tidal-dl -l"
alias pc="proxychains"

# pacman
alias pmu="pekmen;sudo reflector --verbose --latest 5 --protocol https --sort rate --save /etc/pacman.d/mirrorlist"
alias pmu-id="pekmen;sudo reflector --verbose --country Indonesia --age 12 --protocol https --protocol http --sort rate --save /etc/pacman.d/mirrorlist"
alias psu="sudo pacman -Syyuw"

# youtube-dl
function ytmkv() {
    youtube-dl --merge-output-format mkv --output "%(title)s.%(ext)s" $@
}
function ytmkv1080() {
    youtube-dl --merge-output-format mkv --format "best[height<=1080]" --output "%(title)s.%(ext)s" $@
}

function ytmp4() {
    youtube-dl --merge-output-format mp4 --output "%(title)s.%(ext)s" $@
}
function ytmp41080() {
    youtube-dl --merge-output-format mp4 --format "best[height<=1080]" --output "%(title)s.%(ext)s" $@
}

function ytmp3() {
    youtube-dl --format bestaudio --extract-audio --audio-format mp3 --audio-quality 0 --output "~/Music/youtube/%(title)s.%(ext)s" $@
}

# aur release
function aur-release() {
    version=$(cat PKGBUILD | grep pkgver= | cut -d = -f 2)
    rm .SRCINFO
    makepkg --printsrcinfo >.SRCINFO
    git status
    git commit -m "chore: release $version"
    git push origin master
}
